# stand-alone makefile for testing: aims to compare subsequent runs ("make checkall")
# against a previous reference run ("make emitall")
#
# if you do:
#   - "make runall" it will run all programs in TESTS
#   - "make emitall" it emit .outs for all programs in TESTS
#   - "make checkall" it will check all programs in TESTS against their .out
#   - "make cksumall" it will compute checksums for all programs in TESTS
#
# Should not have to invoke this directly: ./Makefile does.
#
# We seperate this out to hopefully clean up the various makefiles: they worry
# about making binaries, this one worries about testing.

INSTALL = pi-install

# shut up "ntering/leaving"
MAKEFLAGS += --no-print-directory

# we only look at this output
GREP_STR := "TRACE:"

.SUFFIXES: .out .run .check .emit

# this will be passed in by the caller.
# TESTS      := $(patsubst %.c, %, $(TESTS_SRC)) 
ifndef TESTS
$(error TESTS is not defined: makefile invoked incorrectly)
endif


TEST_RUN   := $(patsubst %.bin, %.run, $(TESTS))  
TEST_EMIT  := $(patsubst %.bin, %.emit, $(TESTS))  
TEST_CHECK := $(patsubst %.bin, %.check, $(TESTS))  
TEST_CKSUM := $(patsubst %.bin, %.cksum, $(TESTS))  
TEST_OUT   := $(patsubst %.bin, %.out, $(TESTS))  

# set whatever you want the default action to be.
all: $(TEST_RUN) # $(TEST_CHECK) 

%.run: %.bin
	@echo "\n-------------------[about to run <./$*]-----------------------";
	$(INSTALL) ./$< 
	@echo "-------------------[done running <./$*>]------------------------------------";

%.err: %.bin
	@-./$<  && echo "Fail: did not detect error" || echo "Success: detected error";


# note: this will fail if output does not contain a trace.
# we pull everything into .out so that it's easier to debug.
%.emit: %.bin
	$(INSTALL) ./$<  2>&1 > /dev/null | grep -v simple_boot | grep $(GREP_STR) > $*.out

%.check: %.bin
	@echo -n "checking <$*>: ";
	@$(INSTALL) ./$< 2>&1 > /dev/null | grep -v simple_boot | grep  $(GREP_STR) > $*.test
	@diff ./$*.out ./$*.test
	@echo " Success: < $< >!";
	@rm ./$*.test

# we could just cksum all the .outs, but this lets us be more targeted.
%.cksum: %.out
	cksum ./$*.out

# not sure if there is a better way: use these fake target to run our
# checks for everything.
emit: $(TEST_EMIT) 
check: $(TEST_CHECK)  
run: $(TEST_RUN) 
cksum:  $(TEST_CKSUM)

cleanall:
	rm -f *.out

.PHONY: all clean run emit check cksum
